<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:wpf="clr-namespace:PixelLab.Wpf;assembly=PixelLab.Wpf"
                    xmlns:Conv="clr-namespace:Bska.Client.UI.Converters"
                    xmlns:c="clr-namespace:Bska.Client.UI.Controls"
                    xmlns:Helper="clr-namespace:Bska.Client.UI.Helper">

    <Conv:GlobalStatusConverter x:Key="GlobalStatusConverter"/>
    <Conv:StuffTypeConverter x:Key="StuffTypeConverter"/>
    <Conv:StuffToStuffTypeConverter x:Key="StuffToStuffTypeConverter"/>

    <Conv:OrderTypeConverter x:Key="OrderTypeConverter"/>
    <Conv:PersianDateConverter x:Key="PersianDateConverter"/>
    <Conv:OrderStatusConverter x:Key="OrderStatusConverter"/>
    <Conv:IndexConverter x:Key="IndexConverter"/>
    <Conv:SellerTypeConverter x:Key="SellerTypeConverter"/>

    <Conv:OrderStatusToBrushConverter x:Key="OrderStatusToBrushConverter"/>
    <Conv:OrderStatusToColorConverter x:Key="OrderStatusToColorConverter"/>

    <Conv:SubOrderStatusToBrushConverter x:Key="SubOrderStatusToBrushConverter"/>
    <Conv:SubOrderStatusToColorConverter x:Key="SubOrderStatusToColorConverter"/>
    
    <Conv:StuffTypeToBrushConverter x:Key="StuffTypeToBrushConverter"/>
    <Conv:StyffTypeToColorConverter x:Key="StyffTypeToColorConverter"/>

    <LinearGradientBrush x:Key="MainBackgroundBrush" EndPoint="0.439,0.967" StartPoint="0.561,0.033">
        <GradientStop Color="#FF053461" Offset="0" />
        <GradientStop Color="#FF1A3F63" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MainForegroundBrush" EndPoint="0.439,0.967" StartPoint="0.561,0.033">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFFFFFFF" Offset="1" />
    </LinearGradientBrush>
    
    <!--Strat of my defined codes -->
    <Geometry x:Key="DownArrow">M0,0 L1,0 0.5,1Z</Geometry>

    <FontFamily x:Key="PrimaryFontFamily">..\Fonts\#B ROYA</FontFamily>
    <FontFamily x:Key="SecondaryFontFamily">..\Fonts\#TAHOMA</FontFamily>
    <FontFamily x:Key="LatinFontFamily">..\Fonts\#SEGOE UI</FontFamily>

    <Style x:Key="FlatWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="33"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="0"/>
                                </Grid.RowDefinitions>

                                <!--Header-->
                                <Border Grid.Row="0" x:Name="Header" Background="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" HorizontalAlignment="Right" TextWrapping="Wrap" Margin="15,5,10,5" Foreground="{DynamicResource MainForegroundBrush}" FontSize="18" VerticalAlignment="Center" FontWeight="Bold" x:Name="HeaderTitle"/>
                                        <Button  Grid.Column="0" Height="20" HorizontalAlignment="Left" Content="X" Style="{DynamicResource FlatButtonStyle}" Width="20" Margin="5,0,0,0" x:Name="btnClose" Command="Close" />
                                    </Grid>
                                </Border>
                                <!-- Content -->
                                <Border Grid.Row="1" Background="{TemplateBinding BorderBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0">
                                    <ContentPresenter/>
                                </Border>

                                <!-- Footer -->
                                <Border Grid.Row="2" Background="{TemplateBinding Foreground}" Height="35" x:Name="Footer" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,0" CornerRadius="0,0,5,5"/>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--listview styles-->

    <Style x:Key="FlatTitleMoalWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="10"/>
                                </Grid.RowDefinitions>
                                <!--Header-->
                                <Border Grid.Row="0" x:Name="Header" Background="{TemplateBinding Foreground}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0" Width="{TemplateBinding MinWidth}" HorizontalAlignment="Left">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="15,5,10,5" Foreground="{DynamicResource MainForegroundBrush}" FontSize="18" VerticalAlignment="Center" FontWeight="Bold" x:Name="HeaderTitle"/>
                                        <Button  Grid.Column="0" Height="20" HorizontalAlignment="Left" Content="X" Style="{DynamicResource FlatButtonStyle}" Background="{TemplateBinding BorderBrush}" Width="20" Margin="5,0,0,0" x:Name="btnClose" Command="Close" />
                                    </Grid>
                                </Border>

                                <Border  Grid.Row="1" Background="{TemplateBinding BorderBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0">
                                    <ContentPresenter/>
                                </Border>

                                <!-- Footer -->
                                <Border Grid.Row="2" Background="{TemplateBinding Foreground}" Height="10" x:Name="Footer" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,0" CornerRadius="0,0,5,5"/>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- column header grip style -->
    <Style x:Key="ColumnGrip" TargetType="{x:Type Thumb}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="3" />
        <Setter Property="Opacity" Value="0.25" />
        <Setter Property="DockPanel.Dock" Value="Right" />
    </Style>

    <!-- first, empty column -->
    <DataTemplate x:Key="EmptyColumnTemplate">
    </DataTemplate>

    <!-- list view details -->

    <ControlTemplate x:Key="BeskaEditListViewItemTemplate" TargetType='{x:Type ListViewItem}'>
        <Grid SnapsToDevicePixels="True" Margin="0,0,0,0">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}" BorderThickness="0,0,0,1" CornerRadius="0,0,0,0" />
            <GridViewRowPresenter TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="16" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Change IsSelected SelectedListBoxBrush to set the selection color for the items -->
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource RestaurantEditListViewSelectedBrush}" TargetName="Border"/>-->
                <Setter Property="Background"  >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000" Offset="1"/>
                            <GradientStop Color="#4BFFFFFF" Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" TargetName="Border"/>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BeskaEditListViewItemTemplateMain" TargetType='{x:Type ListViewItem}'>
        <Grid SnapsToDevicePixels="True" Margin="0,0,0,0" Height="30">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{StaticResource MainForegroundBrush}" BorderThickness="0,0,0,0.5" CornerRadius="0,0,0,0"/>
            <GridViewRowPresenter TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="16" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Change IsSelected SelectedListBoxBrush to set the selection color for the items -->
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource RestaurantEditListViewSelectedBrush}" TargetName="Border"/>-->
                <Setter Property="Background"  >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000" Offset="1"/>
                            <GradientStop Color="#4BFFFFFF" Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource PanelGradientBrush}" TargetName="Border"/>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BeskaListViewItemTemplateSmall" TargetType='{x:Type ListViewItem}'>
        <Grid SnapsToDevicePixels="True" Margin="0,0,0,0" MinHeight="16">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}" BorderThickness="0,0,0,0.5" CornerRadius="0,0,0,0"/>
            <GridViewRowPresenter TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="12" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Change IsSelected SelectedListBoxBrush to set the selection color for the items -->
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource RestaurantEditListViewSelectedBrush}" TargetName="Border"/>-->
                <Setter Property="Background"  >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00000000" Offset="1"/>
                            <GradientStop Color="#4BFFFFFF" Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" TargetName="Border"/>
                <Setter Property="BorderBrush" Value="#7FFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BeskaEditListViewStyle" TargetType="ListView">
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <!-- style applied to column headers -->
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
    </Style>

    <!-- style applied to selected column headers -->
    <Style x:Key="ColumnSelectedHeaderStyle" BasedOn="{StaticResource ColumnHeaderStyle}"  TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SelectedHeaderBackgroundBrush}"/>
    </Style>

    <!-- style applied to column headers -->
    <Style x:Key="FirstColumnHeaderStyle" BasedOn="{StaticResource ColumnHeaderStyle}" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1,1,0,1"/>
        <Setter Property="Padding" Value="15,5,5,5"/>
        <Setter Property="CornerRadius" Value="5,0,0,5"/>
    </Style>

    <!-- style applied to column headers -->
    <Style x:Key="LastColumnHeaderStyle" BasedOn="{StaticResource ColumnHeaderStyle}" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,1,1,1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="CornerRadius" Value="0,5,5,0"/>
    </Style>

    <!-- header used when no sorting -->
    <Style x:Key="BeskaDataGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd" Style="{DynamicResource ColumnHeaderStyle}">
                        <DockPanel>
                            <TextBlock SnapsToDevicePixels="True"  Text="{TemplateBinding GridViewColumnHeader.Content}"
                  TextAlignment="Center"  VerticalAlignment="Center" FontWeight="Bold"  Margin="5,0,0,0"
                  Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource ColumnGrip}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- header used to sort ascending -->
    <Style x:Key="BeskaDataGridViewColumnHeaderAscending" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd" Style="{DynamicResource ColumnHeaderStyle}">
                        <DockPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="{TemplateBinding GridViewColumnHeader.Content}" TextAlignment="Left"
                    VerticalAlignment="Center" FontWeight="Bold" Margin="5,0,0,0"
                    Foreground="{DynamicResource BeskaDataGridSelectedHeaderFontColor}" />
                                <Path StrokeThickness="1" Fill="{DynamicResource BeskaDataGridSelectedHeaderFontColor}" Data="M 5,10 L 15,10 L 10,5 L 5,10" />
                            </StackPanel>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource ColumnGrip}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- header used to sort descending -->
    <Style x:Key="BeskaDataGridViewColumnHeaderDescending" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd" Style="{DynamicResource ColumnHeaderStyle}">
                        <DockPanel>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="{TemplateBinding GridViewColumnHeader.Content}" TextAlignment="Left" 
                    VerticalAlignment="Center" FontWeight="Bold" Margin="5,0,0,0"
                    Foreground="{DynamicResource BeskaDataGridSelectedHeaderFontColor}" />
                                <Path StrokeThickness="1" Fill="{DynamicResource BeskaDataGridSelectedHeaderFontColor}" Data="M 5,5 L 10,10 L 15,5 L 5,5" />
                            </StackPanel>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource ColumnGrip}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FirstColumnGridViewColumnHeader" BasedOn="{StaticResource BeskaDataGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd" Style="{DynamicResource FirstColumnHeaderStyle}">
                        <TextBlock
                Text="{TemplateBinding GridViewColumnHeader.Content}"
                TextAlignment="Left"
                VerticalAlignment="Center"
                Foreground="{DynamicResource BeskaDataGridHeaderFontColor}"
                FontWeight="Bold"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LastColumnGridViewColumnHeader" BasedOn="{StaticResource BeskaDataGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="GridViewColumnHeader.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd" Style="{DynamicResource LastColumnHeaderStyle}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BeskaEditListViewItemStyle" TargetType="{x:Type ListViewItem}" >
        <Setter Property="Template" Value="{DynamicResource BeskaEditListViewItemTemplate}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="BeskaEditListViewItemStyleMain" TargetType="{x:Type ListViewItem}" >
        <Setter Property="Template" Value="{DynamicResource BeskaEditListViewItemTemplateMain}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Helper:DoubleClickBehavior.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=DataContext.DoubleClickListViewItemCommand}"/>
        <Setter Property="Helper:DoubleClickBehavior.CommandParameter" Value="{Binding}"/>
    </Style>

    <Style x:Key="BeskaListViewItemStyleSmall" TargetType="{x:Type ListViewItem}" >
        <Setter Property="Template" Value="{DynamicResource BeskaListViewItemTemplateSmall}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Helper:DoubleClickBehavior.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=DataContext.DoubleClickListViewItemCommand}"/>
        <Setter Property="Helper:DoubleClickBehavior.CommandParameter" Value="{Binding}"/>
    </Style>

    <Style x:Key="BeskaListViewItemStyleSmallNoClickable" TargetType="{x:Type ListViewItem}" >
        <Setter Property="Template" Value="{DynamicResource BeskaListViewItemTemplateSmall}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>
    
    <Style x:Key="StatisticsHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5,15,0,10"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Background" Value="{DynamicResource StatisticsHeaderBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource StatisticsHeaderBorderBrush}" />
    </Style>

    <Style x:Key="StatisticsControlStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Background" Value="{DynamicResource StatisticsControlBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="3,3,3,3"/>
    </Style>
    
    <Style x:Key="headLinesGridViewStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#00000000"/>
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="Orange" />

            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="HeaderTemplateArrowUp">
        <DockPanel>
            <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
            <Path x:Name="arrow"
           StrokeThickness = "1"
           Fill = "White"
           Data = "M 5,10 L 15,10 L 10,5 L 5,10"/>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderTemplateArrowDown">
        <DockPanel>
            <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
            <Path x:Name="arrow"
              StrokeThickness = "1"
              Fill = "White"
              Data = "M 5,5 L 10,10 L 15,5 L 5,5"/>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderTemplateTransparent">
        <DockPanel>
            <TextBlock VerticalAlignment="Center"  HorizontalAlignment="Center" Text="{Binding}"/>
            <Path x:Name="arrow"
              StrokeThickness = "1"
              Fill = "Transparent"
              Data = "M 5,5 L 10,10 L 15,5 L 5,5"/>
        </DockPanel>
    </DataTemplate>

    <!-- style for all cells when in edit mode -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" >
        <Setter Property="Background" Value="#00ffffff" />
        <Setter Property="BorderBrush" Value="#00ffffff" />
        <Setter Property="AcceptsReturn" Value="False" />
        <Setter Property="AcceptsTab" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource RestaurantDataFontColor}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="#ff000000" />
                <Setter Property="BorderBrush" Value="#ff000000" />
                <Setter Property="Background" Value="#a0ffffff" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--End defining Data Grid Style-->


    <!--Botton Style -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Tab Botton Style -->
    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1" >
                    <GradientStop Color="#FF999999" Offset="0.545"/>
                    <GradientStop Color="#FF141414" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0.487"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Timeline1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Timeline2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="1,1,1,0" BorderBrush="#AA9A9A9A" Padding="1.4,1.4"
							CornerRadius="6,6,0,0">
                        <Border x:Name="border" 
								BorderThickness="1,1,1,0"
								Padding="0,0" 
								BorderBrush="DarkGray" 
								CornerRadius="6,6,0,0" 
								Background="{TemplateBinding Background}">
                            <Grid>
                                <Border Opacity="0" HorizontalAlignment="Stretch"  x:Name="glow" CornerRadius="1,1,1,1">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.368" Y="-0.152"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#B22D83F9" Offset="0"/>
                                            <GradientStop Color="#000018B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentShadow" Style="{StaticResource ShadowStyle}"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="content"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                        <GradientStop Color="#FFaaaaaa" Offset="0.515"/>
                                        <GradientStop Color="#FF001414" Offset="0"/>
                                        <GradientStop Color="#FF000000" Offset="0.487"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background"  Value="#99000000"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"  Value="#99000000"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomTitButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" Background="White" Height="{TemplateBinding Height}">
                            <Border x:Name="ContentBorder" Background="{DynamicResource PrimaryHueMidBrush}" Margin="0.7"
									  BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentShadow" Style="{StaticResource ShadowStyle}"/>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="content" />
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="Silver" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Blue Botton Style -->
    <Style x:Key="BlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1" >
                    <GradientStop Color="#FF999999" Offset="0.545"/>
                    <GradientStop Color="#FF141414" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0.487"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Timeline1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Timeline2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="1" BorderBrush="#AA9A9A9A" Padding="1,1"
							CornerRadius="3">
                        <Border x:Name="border" 
								BorderThickness="1"
								Padding="0,0" 
								BorderBrush="DarkGray" 
								CornerRadius="3" 
								Background="{TemplateBinding Background}">
                            <Grid>
                                <Border Opacity="0" HorizontalAlignment="Stretch"  x:Name="glow" CornerRadius="1,1,1,1">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.368" Y="-0.152"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#B22D83F9" Offset="0"/>
                                            <GradientStop Color="#000018B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentShadow" Style="{StaticResource ShadowStyle}"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="content" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                        <GradientStop Color="#FFaaaaaa" Offset="0.515"/>
                                        <GradientStop Color="#FF001414" Offset="0"/>
                                        <GradientStop Color="#FF000000" Offset="0.487"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#B22D83F9" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#B22D83F9" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuggestButtonStyle" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                <Grid Width="70" Height="70" x:Name="grid1">
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF0975CF" Offset="0.522"/>
                                                <GradientStop Color="#BC0857E0" Offset="1"/>
                                                <GradientStop Color="#D00E69B6" Offset="0.938"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.17" Y="-0.193"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FFE4E7E8" Offset="0"/>
                                                <GradientStop Color="#FFEAEAEA" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path Stretch="Fill" StrokeThickness="0" x:Name="ArrowsPath" RenderTransformOrigin="0.5,0.5" Data="M800 0c-65.696 0-117.312 45.12-154.368 114.752l-0.672-0.384c-53.824 105.376-133.952 173.632-221.728 173.632h-295.232c-71.776 0-128 70.304-128 160 0 89.76 56.224 160 128 160 35.296 0.128 63.84 28.672 63.84 64v288c0 35.36 28.672 64 64 64h128c35.328 0 64-28.64 64-64v-32c0-32-32-46.304-32-64v-224c0-0.736 0.512-1.248 0.576-1.984 0.32-4.576 1.568-8.8 3.584-12.64 0.576-1.056 1.184-1.888 1.888-2.816 2.56-3.808 5.792-6.944 9.728-9.376 0.192-0.128 0.256-0.32 0.448-0.448 0.128 0 0.224-0.128 0.352-0.128 2.56-1.44 5.632-1.76 8.512-2.56 80.768 8.576 153.888 73.76 204.064 171.936l0.8-0.384c37.088 69.408 88.576 114.4 154.208 114.4 147.072 0 224-225.376 224-448s-76.928-448-224-448zM640 448c0-33.184 1.952-65.248 5.248-96h90.752c35.328 0 64 43.008 64 96 0 53.056-28.672 96-64 96h-90.752c-3.296-30.752-5.248-62.752-5.248-96zM64 448c0-52.992 28.672-96 64-96h224.448c-19.84 23.328-32.448 57.184-32.448 96 0 38.88 12.608 72.736 32.448 96h-224.448c-35.328 0-64-42.944-64-96zM383.84 960h-128v-288c0-23.328-6.24-45.12-17.184-64h22.336v0.384h96.256c-3.424 9.952-5.408 20.512-5.408 31.616v224c0 30.816 17.216 51.328 27.488 63.552 1.408 1.696 3.072 3.424 4.512 5.312v27.136zM423.232 544.384h-7.232v-0.384c-35.328 0-64-42.944-64-96 0-52.992 28.672-96 64-96h7.232c60.352 0 116.864-23.744 166.592-64.576-9.152 51.52-13.824 106.080-13.824 160.576 0 54.688 4.672 109.44 13.888 160.992-49.76-40.864-106.304-64.608-166.656-64.608zM800 832c-64.576 0-120-91.872-145.312-224h81.312c71.744 0 128-70.24 128-160 0-89.696-56.256-160-128-160h-81.312c25.312-132.064 80.736-224 145.312-224 88.384 0 160 171.936 160 384s-71.616 384-160 384z" Margin="15,10,15,10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Path.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF3A9556" Offset="0.54"/>
                                                <GradientStop Color="#AD0A5922" Offset="0"/>
                                                <GradientStop Color="#B021763B" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Path.Stroke>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                        <Path.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF3A8C3A" Offset="0"/>
                                                <GradientStop Color="#FF095A22" Offset="1"/>
                                                <GradientStop Color="#FF338044" Offset="0.763"/>
                                            </RadialGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

   
    <!--Refresh Botton Style -->
    <Style x:Key="RefreshButtonStyle" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid HorizontalAlignment="Stretch" x:Name="grid">
                                <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                    <Grid Width="70" Height="70" x:Name="grid1">

                                        <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush>
                                                    <GradientStop Color="#FF01621F" Offset="0.522"/>
                                                    <GradientStop Color="#BC3AAD5E" Offset="1"/>
                                                    <GradientStop Color="#D001621F" Offset="0.938"/>
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>

                                        <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                            <Ellipse.Fill>
                                                <RadialGradientBrush>
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                            <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                            <TranslateTransform X="-0.17" Y="-0.193"/>
                                                        </TransformGroup>
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Color="#FFA2E4A2" Offset="0"/>
                                                    <GradientStop Color="#FF479547" Offset="1"/>
                                                </RadialGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Path Stretch="Fill" StrokeThickness="0" x:Name="ArrowsPath" RenderTransformOrigin="0.5,0.5" Data="M26.826754,40.019998 L23.438574,51.135802 C44.268988,55.623298 55.379534,41.947063 55.422999,41.893448 44.320937,69.592646 19.963885,63.388195 19.914866,63.375677 L16.391158,73.866997 0.67000072,50.886008 26.826754,40.019998 z M39.031843,0 L54.753001,22.980989 28.596245,33.847001 31.984427,22.731195 C11.127858,18.238066 0.015579104,31.954306 0,31.97355 11.102083,4.2743073 35.459196,10.478825 35.508135,10.491322 L39.031843,0 z" Margin="15,10,15,10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF3A9556" Offset="0.54"/>
                                                    <GradientStop Color="#AD0A5922" Offset="0"/>
                                                    <GradientStop Color="#B021763B" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <RadialGradientBrush>
                                                    <GradientStop Color="#FF3A8C3A" Offset="0"/>
                                                    <GradientStop Color="#FF095A22" Offset="1"/>
                                                    <GradientStop Color="#FF338044" Offset="0.763"/>
                                                </RadialGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Grid>
                                </Viewbox>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center" FontSize="12" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content,ConverterCulture=en-us}"/>
                            </Grid>
                            <ControlTemplate.Resources>

                                <Storyboard x:Key="Storyboard1">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ArrowsPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" RepeatBehavior="1x">
                                        <SplineDoubleKeyFrame KeySpline="0.512,0,0.52,1" KeyTime="00:00:00.5000000" Value="360"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                            </ControlTemplate.Resources>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}" x:Name="Storyboard1_BeginStoryboard"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="InnerEllipse" Property="Fill">
                                        <Setter.Value>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="0.043" Y="0.093"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FFA2E4A2" Offset="0"/>
                                                <GradientStop Color="#FF479547" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="ArrowsPath" Value="16,11,14,9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--Blue Botton Style -->
    <Style x:Key="DropDownButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0" StartPoint="0,1" >
                    <GradientStop Color="#FF999999" Offset="0.545"/>
                    <GradientStop Color="#FF141414" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0"/>
                    <GradientStop Color="#FF000000" Offset="0.487"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Timeline1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Timeline2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="1" BorderBrush="#AA9A9A9A" Padding="1,1"
							CornerRadius="3">
                        <Border x:Name="border" 
								BorderThickness="1"
								Padding="0,0" 
								BorderBrush="DarkGray" 
								CornerRadius="3" 
								Background="{TemplateBinding Background}">
                            <Grid>
                                <Border Opacity="0" HorizontalAlignment="Stretch"  x:Name="glow" CornerRadius="1,1,1,1">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.368" Y="-0.152"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#B22D83F9" Offset="0"/>
                                            <GradientStop Color="#000018B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentShadow" Style="{StaticResource ShadowStyle}"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="content" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" >
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" >
                                        <GradientStop Color="#FFaaaaaa" Offset="0.515"/>
                                        <GradientStop Color="#FF001414" Offset="0"/>
                                        <GradientStop Color="#FF000000" Offset="0.487"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#B22D83F9" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#B22D83F9" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.4" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,21,4" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder2" Color="#FF707070"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
                        <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" x:Name="Arrow" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                        </Grid>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" Background="Transparent" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false">
                        <Path Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" x:Name="Arrow" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, ElementName=Placement}" x:Name="Shdw" Color="Transparent">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
            <TextBox Margin="{TemplateBinding Padding}" x:Name="PART_EditableTextBox" Style="{StaticResource ComboBoxEditableTextBox}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ToggleButton Style="{StaticResource ComboBoxToggleButton}" Grid.Column="1" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BeskaComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Margin="1" x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}" x:Name="Shdw" Color="Transparent">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" CornerRadius="5">
                                    <ScrollViewer CanContentScroll="true" >
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Trigger.Setters>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BeskaStuffComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="360"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="90"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontWeight="Bold" Grid.Column="0" HorizontalAlignment="Left" Margin="5,0,0,0">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}  {1}">
                                            <Binding Path="Name"></Binding>
                                            <Binding Path="KalaNo"></Binding>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Converter={StaticResource StuffToStuffTypeConverter}}" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayMemberPath">
            <Setter.Value>
                <MultiBinding StringFormat="{}{0}  {1}" ConverterCulture="fa">
                    <Binding Path="StuffId"/>
                    <Binding Path="Name"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CarDetailsComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=Width}"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3" Width="150">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <TextBlock FontWeight="Bold" FontSize="11" Grid.ColumnSpan="2" Text="{Binding SystemType}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,0,1,5"/>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,5,0" Text="تیپ:" Grid.Row="1" Grid.Column="0"/>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,5,0" Text="مدل:" Grid.Row="2" Grid.Column="0"/>

                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,5,0" Text="{Binding Tipe}" Grid.Row="1" Grid.Column="1"/>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,5,0" Text="{Binding Model}" Grid.Row="2" Grid.Column="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SellerDetailsComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=Width}"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3" Width="150">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,5,0" Text="نام:" Grid.Row="0" Grid.Column="0"/>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,5,0" Text="نوع:" Grid.Row="1" Grid.Column="0"/>

                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,5,0" Text="{Binding Name}" Grid.Row="0" Grid.Column="1"/>
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,5,0" Text="{Binding Type,Converter={StaticResource SellerTypeConverter}}" Grid.Row="1" Grid.Column="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PersonSummaryComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=Width}"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3" Width="150">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontWeight="Bold" FontSize="11" Grid.ColumnSpan="2" Text="{Binding FullName}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,0,1,5"></TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="1" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,0" Text="کد ملی:"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" FontSize="11" Text="{Binding Path=NationalId}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,5,0"></TextBlock>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OrganComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=Width}"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3" Width="150">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontWeight="Bold" FontSize="11" Grid.ColumnSpan="2" Text="{Binding Name}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,0,1,5"></TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="1" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,0" Text="کد بودجه ای:"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" FontSize="11" Text="{Binding Path=BudgetNo}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,5,0"></TextBlock>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LabelsComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SecondaryFontFamily}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0" Background="Transparent">
                        <Border x:Name="border" Margin="3,0,3,0" BorderThickness="1" Width="Auto"
                                            BorderBrush="SteelBlue" CornerRadius="4"
                                            Background="{Binding Path=Background, RelativeSource={
                                            RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type ListBoxItem}
                                            }}" >
                            <Grid Margin="3" Width="70">
                                <TextBlock  VerticalAlignment="Center" FontWeight="Bold" Text="{Binding Path=Label}" HorizontalAlignment="Left" Margin="5,0,5,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="Red">
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Botton Style -->
    <!--End of my defined codes  -->

    <DrawingBrush x:Key="PersonFigureFill" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="F1 M 6.53515625,4.4921875 C 6.53515625,2.01171875 8.546875,0 11.029296875,0 C 13.509765625,0 15.521484375,2.01171875 15.521484375,4.4921875 C 15.521484375,6.974609375 13.509765625,8.986328125 11.029296875,8.986328125 C 8.546875,8.986328125 6.53515625,6.974609375 6.53515625,4.4921875 Z" Brush="#FFFFFFFF" />
                <GeometryDrawing Geometry="F1 M 12.05078125,25.939453125 C 12.05078125,25.939453125 12.05078125,40.1640625 12.05078125,41.490234375 C 12.05078125,42.818359375 13.990234375,43.533203125 14.806640625,43.533203125 C 15.625,43.533203125 17.0546875,43.431640625 17.0546875,41.6953125 C 17.0546875,39.958984375 17.0546875,15.521484375 17.0546875,15.521484375 C 17.0546875,15.521484375 18.5859375,15.521484375 18.5859375,15.521484375 C 18.5859375,15.521484375 18.5859375,23.693359375 18.5859375,24.91796875 C 18.5859375,26.14453125 19.810546875,26.451171875 20.525390625,26.451171875 C 21.240234375,26.451171875 22.466796875,26.349609375 22.466796875,25.123046875 C 22.466796875,23.8984375 22.16015625,16.236328125 22.16015625,14.1953125 C 22.16015625,12.15234375 20.73046875,9.498046875 17.2578125,9.498046875 C 17.2578125,9.498046875 5.20703125,9.498046875 5.20703125,9.498046875 C 1.736328125,9.498046875 0.306640625,12.15234375 0.306640625,14.1953125 C 0.306640625,16.236328125 0,23.8984375 0,25.123046875 C 0,26.349609375 1.224609375,26.451171875 1.939453125,26.451171875 C 2.654296875,26.451171875 3.880859375,26.14453125 3.880859375,24.91796875 C 3.880859375,23.693359375 3.880859375,15.521484375 3.880859375,15.521484375 C 3.880859375,15.521484375 5.412109375,15.521484375 5.412109375,15.521484375 C 5.412109375,15.521484375 5.412109375,39.958984375 5.412109375,41.6953125 C 5.412109375,43.431640625 6.841796875,43.533203125 7.658203125,43.533203125 C 8.4765625,43.533203125 10.416015625,42.818359375 10.416015625,41.490234375 C 10.416015625,40.1640625 10.416015625,25.939453125 10.416015625,25.939453125 C 10.416015625,25.939453125 12.05078125,25.939453125 12.05078125,25.939453125 Z" Brush="#FFFFFFFF" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <SolidColorBrush x:Key="LogoBrush" Color="#FF93999C" />

    <!-- Vertigo Logo -->

    <!-- This brush is used when the person does not have a primary photo -->
    <DrawingBrush x:Key="NoPhotoBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M 126.889,143.333L 250.889,143.333L 250.889,267.333L 126.889,267.333L 126.889,143.333 Z ">
                    <GeometryDrawing.Brush>
                        <LinearGradientBrush StartPoint="0,0.0215053" EndPoint="1,1">
                            <GradientStop Color="#FFFFFFFF" Offset="0.00847458" />
                            <GradientStop Color="#FF949063" Offset="0.800847" />
                        </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                </GeometryDrawing>
                <GeometryDrawing Brush="#FF85825F" Geometry="F1 M 162.428,200.167C 162.428,184.671 175.003,172.085 190.509,172.085C 206.005,172.085 218.591,184.671 218.591,200.167C 218.591,215.683 206.005,228.249 190.509,228.249C 175.003,228.249 162.428,215.683 162.428,200.167 Z " />
                <GeometryDrawing Brush="#FF524F40" Geometry="F1 M 160.598,199.025C 160.598,183.529 173.174,170.943 188.68,170.943C 204.176,170.943 216.762,183.529 216.762,199.025C 216.762,214.541 204.176,227.107 188.68,227.107C 173.174,227.107 160.598,214.541 160.598,199.025 Z " />
                <GeometryDrawing Brush="#FF6D6B51" Geometry="F1 M 253.277,270.359C 250.065,261.438 253.089,268.956 244.895,249.789C 242.347,243.406 234.03,235.753 223.176,235.753L 163.176,235.753C 152.342,235.753 144.025,243.406 141.488,249.789C 138.94,256.153 135.803,261.438 132.631,270.359" />
                <GeometryDrawing Brush="#FF524F40" Geometry="F1 M 249.41,266.847C 246.198,257.926 249.222,265.444 241.028,246.278C 238.48,239.894 230.163,232.241 219.309,232.241L 159.309,232.241C 148.475,232.241 140.158,239.894 137.621,246.278C 135.074,252.641 131.936,257.926 128.764,266.847" />
                <GeometryDrawing Brush="#FFFFFFFF" Geometry="M 115.999,132.639L 260.777,132.639L 260.777,301.028L 115.999,301.028L 115.999,132.639 Z M 126.208,142.884L 250.208,142.884L 250.208,266.884L 126.208,266.884L 126.208,142.884 Z ">
                    <GeometryDrawing.Pen>
                        <Pen LineJoin="Round" Brush="#FFC0C1C3" />
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- MenuPressedBrush - This brush is used for the Main Menu pressed and focused state-->
   
    <!-- This is the style for most borders -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="CornerRadius" Value="10,10,10,10" />
    </Style>

    <!-- This is the default style for all labels -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="{DynamicResource LabelPadding}" />
        <Setter Property="FontFamily" Value="B homa" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!-- This is the default style for all radio buttons -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
    </Style>

    <!-- This is the style for the avatar textblock text -->
    <Style x:Key="AvatarTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
    </Style>

    <!-- This is the style for the list of photos on the PersonInfo control -->
    <Style x:Key="PhotosListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" Margin="5,5,5,5">
                        <WrapPanel IsItemsHost="True" VerticalAlignment="Top" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This is the style for the photo containers in the list of photos on the PersonInfo control -->
    <Style x:Key="PhotosListItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="0,0,10,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Change IsSelected background to set the selection color for the photos -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#FFFFFF" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This is the style for the list of tags on the Person Info control -->
    <Style x:Key="TagsListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" Margin="5,5,5,5">
                        <WrapPanel IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BeskaListViewItemTemplate" TargetType='{x:Type ListViewItem}'>
        <Grid SnapsToDevicePixels="True" Margin="0,3,0,0">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <GridViewRowPresenter TextBlock.Foreground="{DynamicResource ListViewFontColor}" TextBlock.FontSize="11" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}" />
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Change IsSelected SelectedListBoxBrush to set the selection color for the items -->
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource SelectedListBoxBrush}" TargetName="Border" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BeskaListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Margin" Value="0,2,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,2" Text="{TemplateBinding ContentControl.Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GridHeaderFontColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NameGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="4,0,0,2" Text="{TemplateBinding ContentControl.Content}" TextAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource GridHeaderFontColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="B homa" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="Margin" Value="10,0,10,10" />
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="B homa" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="DetailsBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10,10,10,10" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Margin" Value="10,10,10,0" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Background" Value="#FF262626" />
    </Style>

    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="20" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Rectangle" Stroke="#FF051F42" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                    <GradientStop Color="#FF1F317D" Offset="0.101" />
                                    <GradientStop Color="#FF1F317D" Offset="0.49" />
                                    <GradientStop Color="#FF6C8EBD" Offset="0.51" />
                                    <GradientStop Color="#FF283D8C" Offset="0" />
                                    <GradientStop Color="#FF7094C7" Offset="0.986" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF2C558C" Offset="0.101" />
                                        <GradientStop Color="#FF1F317D" Offset="0.49" />
                                        <GradientStop Color="#FF9DB5D7" Offset="0.51" />
                                        <GradientStop Color="#FF244AAF" Offset="0" />
                                        <GradientStop Color="#FF87A4D9" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Stroke="#FF000000" StrokeMiterLimit="1.000000" StrokeThickness="0.500000" RadiusX="5" RadiusY="5" x:Name="rectangle">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                    <GradientStop Color="#FF1E1E1E" Offset="0.101" />
                                    <GradientStop Color="#FF1E1E1E" Offset="0.49" />
                                    <GradientStop Color="#FF5B5959" Offset="0.51" />
                                    <GradientStop Color="#FF2F2F2F" Offset="0" />
                                    <GradientStop Color="#FF5B5959" Offset="0.986" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.501,0.039" StartPoint="0.501,0.971">
                                        <GradientStop Color="#FF3A3A3A" Offset="0.101" />
                                        <GradientStop Color="#FF1E1E1E" Offset="0.49" />
                                        <GradientStop Color="#FFB0B0B0" Offset="0.51" />
                                        <GradientStop Color="#FF656565" Offset="0" />
                                        <GradientStop Color="#FF989898" Offset="0.938" />
                                        <GradientStop Color="#FF7F7F7F" Offset="0.986" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--This sets the default style for all buttons-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NormalButtonStyle}" />

    <!-- Repeat Button Style - This is used by ScrollBar for the up and down buttons -->
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb Style - The Thumb is the draggable part of the Scrollbar -->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="2" RadiusY="2" Fill="#FF414C6F" Stroke="#FFFFFFFF" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsDragging" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollRepeatButton Style - This RepeatButton is used above and below the Thumb in the Scrollbar. They are set to transparent si that they do not show over the scrollbar -->
    <Style x:Key="ScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar  This makes use of Thumb, RepeatButton and ScrollRepeatButton -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18"/>
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>

                        <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource RepeatButtonStyle}" Command="ScrollBar.LineUpCommand"  BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" RenderTransformOrigin="0.5,0.5" Stroke="#FFFFFFFF" Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>

                        <!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}" Width="10" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource RepeatButtonStyle}" Command="ScrollBar.LineDownCommand"  BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" RenderTransformOrigin="0.5,0.5" Stroke="#FFFFFFFF" Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>
                    </Grid>

                    <!-- This uses a single template for ScrollBar and rotate it to be Horizontal
					It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <!-- Rotate the ScrollBar from Vertical to Horizontal -->
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <!-- Change the commands to do Horizontal commands -->
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Main Menu - This template uses a StackPanel to layout MenuItems -->
    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem - The template uses triggers to provide four different arrangements of menu item which are set via the Role property -->
    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Margin="0,0,10,0">
                        <Grid>
                            <!-- The Grid is used to hold together columns for an Content and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="1" Margin="0,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Data="M-1.0089707E-11,0.0050000012 L8.03125,-3.5155176E-24 3.9995833,4.095 z" Height="4.095" />
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" VerticalOffset="0" PopupAnimation="Slide">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" />
                                    <!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource PrimaryHueMidBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF000000" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledMenuForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- TagsList ItemTemplate-->
    <DataTemplate x:Key="TagsItemTemplate">
        <TextBlock Text="{Binding}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
    </DataTemplate>

    <!-- Diagram Resources-->

    <!-- Pens used to draw connector lines -->
    <Pen x:Key="ChildConnectionPen" Brush="#80808080" Thickness="1" />
    <Pen x:Key="MarriedConnectionPen" Brush="#ff90c090" Thickness="2" />
    <Pen x:Key="FormerConnectionPen" Brush="#ff90c090" Thickness="2" DashStyle="{x:Static DashStyles.Dash}" />

    <!-- Text used to draw connector text (marriage date) -->
    <Color x:Key="ConnectionTextColor">#ffffffff</Color>
    <FontFamily x:Key="ConnectionTextFont">B homa</FontFamily>
    <!--<System:Double x:Key="ConnectionTextSize">12</System:Double>-->

    <!-- Node colors -->
    <Color x:Key="PrimaryColor">#fff06423</Color>
    <Color x:Key="PrimaryStarColor">#ff3952a3</Color>
    <Color x:Key="PrimaryHoverColor">#ffff8443</Color>
    <Color x:Key="RelatedColor">#fff06423</Color>
    <Color x:Key="RelatedHoverColor">#ffff8443</Color>

    <SolidColorBrush x:Key="PrimaryStarBrush" Color="{DynamicResource PrimaryStarColor}" />

    <SolidColorBrush x:Key="DiagramToolTipBackgroundBrush" Color="#FF202020" />

    <!-- ToolTip -->
    <Style x:Key="DiagramToolTip" TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Border" Background="{DynamicResource DiagramToolTipBackgroundBrush}" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="10,10,10,10">
                        <StackPanel>
                            <Border BorderBrush="#02747474" Background="#02000000" HorizontalAlignment="Center" Margin="10,5,10,0" VerticalAlignment="Top" BorderThickness="1,1,1,1" x:Name="AvatarPhotoBorder">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect ShadowDepth="7" Softness="0.75" />
                                </Border.BitmapEffect>
                                <Image x:Name="Avatar" Source="{Binding Path=Person.Avatar, Mode=OneWay}" Stretch="Uniform" VerticalAlignment="Top" MaxWidth="90" MaxHeight="85" HorizontalAlignment="Left" StretchDirection="DownOnly" />
                            </Border>
                            <Border x:Name="NoPhotoBorder" Visibility="Visible"  BorderBrush="#FFFFFFFF" Background="#02FFFFFF" Margin="10,5,10,0">
                                <Rectangle Fill="{DynamicResource NoPhotoBrush}" Stroke="{x:Null}" Width="70" Height="85" x:Name="NoPhotoRectangle">
                                    <Rectangle.BitmapEffect>
                                        <DropShadowBitmapEffect ShadowDepth="7" Softness="0.75" />
                                    </Rectangle.BitmapEffect>
                                </Rectangle>
                            </Border>
                            <ContentPresenter Margin="10,0,10,3" HorizontalAlignment="Right" TextBlock.TextAlignment="Right" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="MalePrimaryLivingFill" Color="{DynamicResource RelatedColor}" />

    <DrawingBrush x:Key="People">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="{DynamicResource MalePrimaryLivingFill}" Geometry="F1 M 580.752,806.943C 580.752,804.257 582.932,802.08 585.617,802.08C 588.303,802.08 590.481,804.257 590.481,806.943C 590.481,809.632 588.303,811.807 585.617,811.807C 582.932,811.807 580.752,809.632 580.752,806.943 Z " />
                    <GeometryDrawing Brush="{DynamicResource MalePrimaryLivingFill}" Geometry="F1 M 586.724,830.159L 586.724,846.993C 586.724,848.431 588.823,849.204 589.705,849.204C 590.593,849.204 592.14,849.095 592.14,847.216L 592.14,818.884L 593.797,818.884L 593.797,829.053C 593.797,830.38 595.125,830.713 595.899,830.713C 596.672,830.713 597.997,830.603 597.997,829.276C 597.997,827.951 597.667,819.657 597.667,817.448C 597.667,815.235 596.12,812.363 592.36,812.363L 579.315,812.363C 575.557,812.363 574.011,815.235 574.011,817.448C 574.011,819.657 573.677,827.951 573.677,829.276C 573.677,830.603 575.005,830.713 575.779,830.713C 576.552,830.713 577.88,830.38 577.88,829.053L 577.88,818.884L 579.539,818.884L 579.539,847.216C 579.539,849.095 581.085,849.204 581.969,849.204C 582.855,849.204 584.956,848.431 584.956,846.993L 584.956,830.159L 586.724,830.159 Z " />
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>


    <Style x:Key="CustomTextBoxTextStyle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Trigger.Setters>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomPasswordBoxTextStyle" TargetType="{x:Type PasswordBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Trigger.Setters>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CompletedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Width="18" >
                            <Border  x:Name="Border"  Background="White" BorderBrush="#B1B4B4" BorderThickness="1">
                                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" CornerRadius="10,10,10,10"/>
                            </Border>
                            <Path x:Name="Checkmark" Width="15" Margin="1,-5,-1,5" Data="M0,0.6 L0.4,1 L1,0" Opacity="0" Stretch="Fill" Stroke="Black" StrokeThickness="2.5" />
                        </Grid>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Margin="5,0,0,0" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Checkmark" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Checkmark" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="InnerBorder" Property="Background" Value="#EBEFF0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF7C8989" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CompletedRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Width="16" Height="16">
                            <Border  x:Name="Border"  CornerRadius="10,10,10,10" Background="White" BorderBrush="#B1B4B4" BorderThickness="1">
                                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" CornerRadius="10,10,10,10"/>
                            </Border>
                            <Path x:Name="Checkmark" Width="11.5" Margin="2,2,2,2" Data="F1 M 6.535156,4.492188 C 6.535156,2.011719 8.546875,0.000000 11.029297,0.000000 C 13.509766,0.000000 15.521484,2.011719 15.521484,4.492188 C 15.521484,6.974609 13.509766,8.986328 11.029297,8.986328 C 8.546875,8.986328 6.535156,6.974609 6.535156,4.492188 Z" Opacity="0" Stretch="Fill" Fill="OrangeRed" StrokeThickness="2.5" />
                        </Grid>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Margin="5,0,0,0" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Checkmark" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Checkmark" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="InnerBorder" Property="Background" Value="#EBEFF0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF7C8989" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" Background="White" Height="{TemplateBinding Height}">
                            <Border x:Name="ContentBorder" Background="#FF164E6E" Margin="0.7"
									  BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock x:Name="OK_TextBlock" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" HorizontalAlignment="Center" VerticalAlignment="Center"
											  Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                            </Border>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#FF3EB9FF" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="OK_TextBlock" Property="Foreground" Value="Black" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter  Property="Background" Value="#EEEEEE" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButtonStyleTit" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="OuterBorder" Background="White" Height="{TemplateBinding Height}">
                            <Border x:Name="ContentBorder" Background="#FF164E6E" Margin="0.7"
									  BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock x:Name="OK_TextBlock" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" HorizontalAlignment="Center" VerticalAlignment="Center"
											  Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                            </Border>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#FF3EB9FF" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="OK_TextBlock" Property="Foreground" Value="Black" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter  Property="Background" Value="#EEEEEE" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OrderNotifyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="bordrContent" Background="#FFEEBA0C">
                        <Grid>
                            <ContentControl Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="bordrContent" Property="Background" Value="#FF3EB9FF" />
                            <Setter TargetName="bordrContent" Property="Cursor" Value="Hand"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="bordrContent" Property="Background" Value="White" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
        <Style x:Key="DropDownSelectorButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Padding" Value="18,10" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border x:Name="Border" BorderThickness="0,1" SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#18CCCCCC" />
                                    <GradientStop Offset="1" Color="#60000000" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <Border x:Name="BottomShadow" Height="1" Margin="0,0,0,-1" VerticalAlignment="Bottom" Background="#4000" Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="c:IndexingStackPanel.StackLocation" Value="First">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,4,0,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="c:IndexingStackPanel.StackLocation" Value="Last">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="Tag" Value="First">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,4,0,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="Tag" Value="Last">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}">
                                
                            </Setter>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}">

                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#383b3c" />
                                        <GradientStop Offset="1" Color="#FF000000" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BottomShadow" Property="Visibility" Value="Visible" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonByOrderStateColorStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{Binding Path=Status, Converter={StaticResource OrderStatusToBrushConverter}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" Margin="1,3,1,0">
                        <Border x:Name="ShadowBorder" Background="#565e63" Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Direction="-90" />
                            </Border.Effect>
                        </Border>
                        <Border Background="#565e63" />
                        <Border Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="ContentHost" Margin="20,-1,20,1" HorizontalAlignment="Center" />

                        <Border x:Name="BottomShadowBorder" Height="5" VerticalAlignment="Bottom" Margin="1,0" Grid.RowSpan="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#0000" Offset="0" />
                                    <GradientStop Color="#1000" Offset="0.5" />
                                    <GradientStop Color="#4000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Grid" Property="Margin" Value="1,0" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="20,-2,20,2" />
                            <Setter TargetName="ShadowBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomShadowBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Status}" Value="Reject">
                            <Setter Property="Opacity" Value="0.75" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="2,2" MappingMode="Absolute" SpreadMethod="Repeat">
                                        <GradientStop Offset="0.5" Color="{Binding Status,Converter={StaticResource OrderStatusToColorConverter}}" />
                                        <GradientStop Offset="0.5" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBySubOrderStateColorStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{Binding Path=State, Converter={StaticResource SubOrderStatusToBrushConverter}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" Margin="1,3,1,0">
                        <Border x:Name="ShadowBorder" Background="#565e63" Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Direction="-90" />
                            </Border.Effect>
                        </Border>
                        <Border Background="#565e63" />
                        <Border Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="ContentHost" Margin="20,-1,20,1" HorizontalAlignment="Center" />

                        <Border x:Name="BottomShadowBorder" Height="5" VerticalAlignment="Bottom" Margin="1,0" Grid.RowSpan="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#0000" Offset="0" />
                                    <GradientStop Color="#1000" Offset="0.5" />
                                    <GradientStop Color="#4000" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Grid" Property="Margin" Value="1,0" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="20,-2,20,2" />
                            <Setter TargetName="ShadowBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomShadowBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="#B033383A">
                        <Path x:Name="Arrow" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="#FFFFFF" Stretch="Fill" Width="6" Height="12" Opacity="0.5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="1.0" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="LineHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#0033383A" Offset="0" />
                        <GradientStop Color="#4033383A" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <RepeatButton Padding="2,0,-2,0" Grid.Column="1" Command="ScrollBar.PageLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" Style="{StaticResource ScrollBarLineButton}" />
            <RepeatButton Padding="-2,0,2,0" Grid.Column="2" Command="ScrollBar.PageRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="LineScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource LineHorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LineScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar Style="{StaticResource LineScrollBar}" HorizontalAlignment="Right" x:Name="PART_HorizontalScrollBar" Grid.Column="1" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                Background="{DynamicResource PrimaryHueMidBrush}"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFFFFF" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="aeroCheckListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!--The grid left margin of -20, gets the 
                first column over to the left to give 
                us that look that the CheckBoxes are 
                outside our ListBox control-->
                        <Grid Background="Transparent" 
                  Width="25" Height="25" 
                  HorizontalAlignment="Left" 
                  Margin="-20,0,0,0">
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource CompletedCheckBox}"
                                     Margin="0,0,3,0" IsChecked="{Binding Path=IsSelected, 
                                                RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"/>
                        </Grid>

                        <!--This positions our content in the perfect position-->
                        <Border Margin="-10,0,10,0"
                    Grid.Column="1"
                    SnapsToDevicePixels="true"
                    x:Name="Bd"
                    VerticalAlignment="Center"
                    MinHeight="20"
                    Background="Transparent">
                            <ContentPresenter>
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="aeroCheckListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" 
     Value="{StaticResource aeroCheckListBoxItemStyle}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">

                    <!--This is the secret to having the area that the CheckBoxes are in 
            blend with the color of the parent border control
            making this area look like a separate control.-->
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">

                        <!--Disabling the HorizontalScrollBarVisibility 
                 allows the ContentPresenter TextBlocks to wrap if the 
                 ListBox is not wide enough for the text-->
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled">

                            <!--This border is Mr. Cool. It places a line down the 
                   middle of the control between the CheckBoxes and the 
                   ListBoxes items.-->
                            <Border Background="Transparent" 
                     Margin="20,0,0,0" 
                     BorderBrush="{StaticResource SolidBorderBrush}" 
                     BorderThickness="1,0,0,0" x:Name="border">

                                <!--Our ListBoxItems are here-->
                                <ItemsPresenter/>

                            </Border>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlobalListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Helper:DoubleClickBehavior.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=DataContext.DoubleClickListBoxItemCommand}"/>
        <Setter Property="Helper:DoubleClickBehavior.CommandParameter" Value="{Binding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="hover"
                            Background="#99E7E7E7"
                            BorderBrush="#99979797"
                            BorderThickness="1"
                            CornerRadius="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed">
                        </Border>
                        <Border x:Name="highlight"
                            Background="#99B0FFA5"
                            BorderBrush="#995CB74E"
                            BorderThickness="1"
                            CornerRadius="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed">
                        </Border>
                        <ContentPresenter></ContentPresenter>
                        <Border Height="1"
                            BorderBrush="#99D7D7D7"
                            BorderThickness="0,1,0,0"
                            Grid.Row="1">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover"
                                Property="Visibility"
                                Value="Visible">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="highlight"
                                Property="Visibility"
                                Value="Visible">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GlobalListBoxItemNoClickAble" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="hover"
                            
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            BorderThickness="1"
                            CornerRadius="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed">
                        </Border>
                        <Border x:Name="highlight"
                            
                            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            BorderThickness="1"
                            CornerRadius="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed">
                        </Border>
                        <ContentPresenter></ContentPresenter>
                        <Border Height="1"
                            BorderBrush="#99D7D7D7"
                            BorderThickness="0,1,0,0"
                            Grid.Row="1">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover"
                                Property="Visibility"
                                Value="Visible">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="highlight"
                                Property="Visibility"
                                Value="Visible">
                            </Setter>
                            <Setter TargetName="highlight" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OrdertemplateListBoxItem">
        <Grid x:Name="containGrid" Margin="5" ToolTip="{Binding Status,Converter={StaticResource OrderStatusConverter}}">
           
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Button Style="{StaticResource CustomTitButton}"  Grid.Column="1"
                       Grid.Row="0" Width="auto" Height="28" Content="{Binding Path=PersonName}" Foreground="#FFF" Command="{Binding RelativeSource={RelativeSource AncestorLevel=3, AncestorType={x:Type Grid}, Mode=FindAncestor},Path=DataContext.PersonDetailsCommand}"
                    CommandParameter="{Binding}"/>
            <TextBlock FontWeight="Bold"
                       Grid.Column="1"
                       Grid.Row="1" Margin="3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{} کد :{0}">
                        <Binding Path="OrderId" />
                    </MultiBinding>
                </TextBlock.Text></TextBlock>
            <TextBlock
                       Grid.Column="1"
                       Grid.Row="2" Margin="3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{} نوع درخواست :{0}">
                        <Binding Path="OrderType" Converter="{StaticResource OrderTypeConverter}" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Text="{Binding Path=OrderDate,Converter={StaticResource PersianDateConverter}}"
                       Grid.Column="1"
                       Grid.Row="3"></TextBlock>
            <TextBlock Text="{Binding Path=Description}"
                       Grid.Column="0"
                       Grid.Row="1" TextWrapping="Wrap" FontSize="10" Margin="3"></TextBlock>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger  Binding="{Binding IsEditable}" Value="False">
                <Setter TargetName="containGrid" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FFDA1A4C" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEditable}" Value="True">
                <Setter TargetName="containGrid" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="OrderListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=GlobalListBoxItemNoClickAble}"></Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=OrdertemplateListBoxItem}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" CornerRadius="4" >
                        <ScrollViewer Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="1"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ReturnRequesttemplateListBoxItem">
        <Grid Margin="5" ToolTip="{Binding Status,Converter={StaticResource OrderStatusConverter}}"
              Background="{DynamicResource PrimaryHueMidBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Button Style="{StaticResource CustomTitButton}"  Grid.Column="1"
                       Grid.Row="0" Width="auto" Height="28" Content="عودت خرید" Foreground="#FFF" Command="{Binding RelativeSource={RelativeSource AncestorLevel=3, AncestorType={x:Type Grid}, Mode=FindAncestor},Path=DataContext.PersonDetailsCommand}"
                    CommandParameter="{Binding}"/> 
            <TextBlock FontWeight="Bold"
                       Grid.Column="1"
                       Grid.Row="1" Margin="3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{} کد :{0}">
                        <Binding Path="Id" />
                    </MultiBinding>
                </TextBlock.Text></TextBlock>
            <TextBlock
                       Grid.Column="1"
                       Grid.Row="2" Margin="3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{} وضعیت :{0}">
                        <Binding Path="Status" Converter="{StaticResource GlobalStatusConverter}"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Text="{Binding Path=InsertDate,Converter={StaticResource PersianDateConverter}}"
                       Grid.Column="1"
                       Grid.Row="3"></TextBlock>
        </Grid>
    </DataTemplate>

    <Style x:Key="ReturnRequestListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=GlobalListBoxItemNoClickAble}"></Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=ReturnRequesttemplateListBoxItem}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" CornerRadius="4" >
                        <ScrollViewer Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="1"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="DescritptionTemplateListBoxItem">
        <Grid Margin="5" x:Name="border">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="2" FontWeight="Bold" Foreground="#FF0D8BD3" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Converter={StaticResource IndexConverter}}"/>
            <TextBlock 
              Grid.Column="1"
                     TextWrapping="Wrap" FontWeight="Bold" FontSize="14" Foreground="#FF0D8BD3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}- {0}">
                        <Binding Path="Description" />
                    </MultiBinding>
                </TextBlock.Text>
                <TextBlock.TextDecorations>
                    <TextDecoration Location="Underline" PenOffset="0">
                        <TextDecoration.Pen>
                            <Pen Brush="#000" Thickness="0.7"/>
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextBlock.TextDecorations>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DescritptionTemplateListBoxItemBindingSelf">
        <Grid Margin="5" x:Name="border">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="2" FontWeight="Bold" Foreground="#FF0D8BD3" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Converter={StaticResource IndexConverter}}"/>
            <TextBlock 
              Grid.Column="1"
                     TextWrapping="Wrap" FontWeight="Bold" FontSize="14" Foreground="#FF0D8BD3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}- {0}">
                        <Binding/>
                    </MultiBinding>
                </TextBlock.Text>
                <TextBlock.TextDecorations>
                    <TextDecoration Location="Underline" PenOffset="0">
                        <TextDecoration.Pen>
                            <Pen Brush="#000" Thickness="0.7"/>
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextBlock.TextDecorations>
            </TextBlock>
        </Grid>
    </DataTemplate>
    
    <Style x:Key="DescriptionListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=GlobalListBoxItemNoClickAble}"></Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=DescritptionTemplateListBoxItem}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="#FF0D8BD3" BorderThickness="1" CornerRadius="4" Background="#FFF">
                        <ScrollViewer Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="1"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DescriptionListBoxBindingSelf" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=GlobalListBoxItemNoClickAble}"></Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=DescritptionTemplateListBoxItemBindingSelf}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="#FF0D8BD3" BorderThickness="1" CornerRadius="4" Background="#FFF">
                        <ScrollViewer Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="1"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="AnalizTemplateListBoxItem">
        <Grid Margin="5" x:Name="border">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="2" FontWeight="Bold" Foreground="#FF0D8BD3" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Converter={StaticResource IndexConverter}}"/>
            <TextBlock 
              Grid.Column="1"
                     TextWrapping="Wrap" FontWeight="Bold" FontSize="14" Foreground="#FF0D8BD3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}- {0} : {1} {2}">
                        <Binding Path="Description" />
                        <Binding Path="Num" />
                        <Binding Path="UnitName" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <Style x:Key="AnalizListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=GlobalListBoxItem}"></Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ResourceKey=AnalizTemplateListBoxItem}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="#FF0D8BD3" BorderThickness="1" CornerRadius="4" Background="#FFF">
                        <ScrollViewer Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Margin="1"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="MetroListBoxItemTemplate">
        <Grid Margin="0,5,0,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Path VerticalAlignment="Center" Data="{Binding Image}" Stretch="Uniform" Width="24" Height="24" 
                    Fill="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}, Path=Foreground}" />
            </Grid>
            <Grid Grid.Row="1">
                <TextBlock MinWidth="150" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Path=Title, FallbackValue=Title}" FontSize="12"  ToolTip="{Binding Title}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}, Path=Foreground}" 
                           TextAlignment="Center"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style x:Key="MetroListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF111111"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF0072C6"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="stuffComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BeskaComboBoxStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="0">
                        <Border BorderBrush="SteelBlue" BorderThickness="1" Margin="1,1,1,1" MinWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=Width}"
                                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=ComboBoxItem},Path=Background}" CornerRadius="4">
                            <Grid Margin="3" Width="150">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontWeight="Bold" FontSize="11" Grid.ColumnSpan="2" Text="{Binding Item1}" Grid.Row="0" HorizontalAlignment="Left" Margin="5,0,1,5"></TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="1" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,0" Text="نوع مال:"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" FontSize="11" Text="{Binding Path=Item2,Converter={StaticResource StuffTypeConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,5,0"></TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="2" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,0" Text="کد مال:"/>
                                <TextBlock Grid.Row="2" Grid.Column="1" FontSize="11" Text="{Binding Path=Item3}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,5,0"></TextBlock>
                                <TextBlock Grid.Column="0" Grid.Row="3" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,0" Text="کد کالا:"/>
                                <TextBlock Grid.Row="3" Grid.Column="1" FontSize="11" Text="{Binding Path=Item4}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,5,0"></TextBlock>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--them buttons-->
    <Style x:Key="EllipseButtonStyle1" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                <Grid Width="70" Height="70" x:Name="grid1">
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF0975CF" Offset="0.522"/>
                                                <GradientStop Color="#BC0857E0" Offset="1"/>
                                                <GradientStop Color="#D00E69B6" Offset="0.938"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.17" Y="-0.193"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FF053461" Offset="0"/>
                                                <GradientStop Color="#FF053461" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="EllipseButtonStyle2" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                <Grid Width="70" Height="70" x:Name="grid1">
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF0975CF" Offset="0.522"/>
                                                <GradientStop Color="#BC0857E0" Offset="1"/>
                                                <GradientStop Color="#D00E69B6" Offset="0.938"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.17" Y="-0.193"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FF045516" Offset="0"/>
                                                <GradientStop Color="#FF045516" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="EllipseButtonStyle3" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                <Grid Width="70" Height="70" x:Name="grid1">
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF0975CF" Offset="0.522"/>
                                                <GradientStop Color="#BC0857E0" Offset="1"/>
                                                <GradientStop Color="#D00E69B6" Offset="0.938"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.17" Y="-0.193"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FF2E2E2E" Offset="0"/>
                                                <GradientStop Color="#FF2E2E2E" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="EllipseButtonStyle4" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Margin="0,0,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
                                <Grid Width="70" Height="70" x:Name="grid1">
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" x:Name="OuterEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#FF0975CF" Offset="0.522"/>
                                                <GradientStop Color="#BC0857E0" Offset="1"/>
                                                <GradientStop Color="#D00E69B6" Offset="0.938"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Stroke="{x:Null}" StrokeThickness="4" Margin="3.6,3.95,4.2,3.85" x:Name="InnerEllipse">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="90.279" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.17" Y="-0.193"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#FFDEDEDE" Offset="0"/>
                                                <GradientStop Color="#FFDEDEDE" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>
</ResourceDictionary>